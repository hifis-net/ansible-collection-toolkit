# SPDX-FileCopyrightText: Helmholtz Centre for Environmental Research (UFZ)
# SPDX-FileCopyrightText: Helmholtz-Zentrum Dresden-Rossendorf (HZDR)
#
# SPDX-License-Identifier: Apache-2.0

---
- name: "Verify"
  hosts: "all"
  gather_facts: true
  vars:
    netplan_ethernets:
      - interface_name: "eth0"
        dhcp4: "no"
        gateway4: "10.123.0.1"
        addresses:
          - "10.123.0.10/24"
        nameservers:
          addresses:
            - "8.8.8.8"
            - "9.9.9.9"
          search:
            - "domain.local"
            - "domain.name"
  tasks:
    - name: "Check network settings if no DHCP is set."
      when: "netplan_ethernets is defined and netplan_ethernets | length > 0 and netplan_ethernets[0]['dhcp4'] == 'no'"
      block:
        - name: "Store actual and target network settings."
          ansible.builtin.set_fact:
            actual_interface_name: "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['interface'] }}"
            target_interface_name: "{{ netplan_ethernets[0]['interface_name'] }}"
            actual_ip_addresses: "{{ hostvars[inventory_hostname]['ansible_all_ipv4_addresses'] | ansible.utils.ipaddr('address') }}"
            target_ip_address: "{{ netplan_ethernets[0]['addresses'][0] | ansible.utils.ipaddr('address') }}"
            actual_subnet: "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['netmask'] }}"
            target_subnet: "{{ netplan_ethernets[0]['addresses'][0] | ansible.utils.ipaddr('netmask') }}"

        - name: "Check that network settings are correct."
          ansible.builtin.assert:
            that:
              - "(actual_ip_addresses | ansible.utils.ipaddr('bool')) is all"
              - "target_ip_address | ansible.utils.ipaddr('bool')"
              - "actual_interface_name == target_interface_name"
              - "target_ip_address in actual_ip_addresses"
              - "actual_subnet == target_subnet"

...
